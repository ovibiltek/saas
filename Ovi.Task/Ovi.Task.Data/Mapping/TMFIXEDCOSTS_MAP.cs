using FluentNHibernate.Mapping;using Ovi.Task.Data.Entity;namespace Ovi.Task.Data.Mapping{    public sealed class TMFIXEDCOSTS_MAP : ClassMap<TMFIXEDCOSTS>    {        public TMFIXEDCOSTS_MAP()        {            Id(x => x.FXC_ID);            Map(x => x.FXC_PROJECT);            Map(x => x.FXC_DATE);            Map(x => x.FXC_DESC);            Map(x => x.FXC_TYPE);            Map(x => x.FXC_PTYPE);            Map(x => x.FXC_TYPEDESC).ReadOnly().Formula("dbo.GetDesc('TMMISCCOSTTYPES','MCT_DESC', FXC_TYPE, (SELECT m.MCT_DESC FROM TMMISCCOSTTYPES m WHERE m.MCT_CODE = FXC_TYPE), :SessionContext.Language)");            Map(x => x.FXC_UNITPRICE);            Map(x => x.FXC_CURR);            Map(x => x.FXC_CURRDESC).ReadOnly().Formula("dbo.GetDesc('TMCURRENCIES','CUR_DESC', FXC_CURR, (SELECT c.CUR_DESC FROM TMCURRENCIES c WHERE c.CUR_CODE = FXC_CURR), :SessionContext.Language)");            Map(x => x.FXC_EXCH);            Map(x => x.FXC_QTY);            Map(x => x.FXC_UOM);            Map(x => x.FXC_UOMDESC).Formula("dbo.GetDesc('TMUOMS','UOM_DESC', FXC_UOM, (SELECT u.UOM_DESC FROM TMUOMS u WHERE u.UOM_CODE = FXC_UOM),:SessionContext.Language)");            Map(x => x.FXC_TOTAL);            Map(x => x.FXC_CREATED);            Map(x => x.FXC_CREATEDBY);            Map(x => x.FXC_UPDATED);            Map(x => x.FXC_UPDATEDBY);            Map(x => x.FXC_RECORDVERSION);        }    }}