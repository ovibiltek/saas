using FluentNHibernate.Mapping;using Ovi.Task.Data.Configuration;using Ovi.Task.Data.Entity;namespace Ovi.Task.Data.Mapping{    public sealed class TMLABORS_MAP : ClassMap<TMLABORS>    {        public TMLABORS_MAP()        {            Id(x => x.LAB_ID);            Map(x => x.LAB_TASK);            Map(x => x.LAB_ACTIVITY);            Map(x => x.LAB_ACTIVITYDESC).ReadOnly().Formula("(SELECT ta.TSA_DESC FROM TMTASKACTIVITIES ta WHERE ta.TSA_LINE = LAB_ACTIVITY AND ta.TSA_TASK = LAB_TASK)");            Map(x => x.LAB_DATE);            Map(x => x.LAB_DURATION);            Map(x => x.LAB_DURATIONUNIT).Length(PropertySettings.L50);            Map(x => x.LAB_PROVINCE);            Map(x => x.LAB_PROVINCEDESC).ReadOnly().Formula("(SELECT a.ADS_DESC FROM TMADDRESSSECTIONS a WHERE a.ADS_CODE = LAB_PROVINCE AND a.ADS_TYPE = 'IL')");            Map(x => x.LAB_TRADE);            Map(x => x.LAB_TRADEDESC).ReadOnly().Formula("(SELECT t.TRD_DESC FROM TMTRADES t WHERE t.TRD_CODE = LAB_TRADE)");            Map(x => x.LAB_ASSIGNEDTO).Length(PropertySettings.L4001);            Map(x => x.LAB_TOTAL);            Map(x => x.LAB_CURR);            Map(x => x.LAB_CURRDESC).ReadOnly().Formula("dbo.GetDesc('TMCURRENCIES','CUR_DESC', LAB_CURR, (SELECT c.CUR_DESC FROM TMCURRENCIES c WHERE c.CUR_CODE = LAB_CURR), :SessionContext.Language)");            Map(x => x.LAB_CREATED);            Map(x => x.LAB_CREATEDBY).Length(PropertySettings.L50);            Map(x => x.LAB_UPDATED);            Map(x => x.LAB_UPDATEDBY).Length(PropertySettings.L50);            Map(x => x.LAB_RECORDVERSION).Default("0");        }    }}