using FluentNHibernate.Mapping;using Ovi.Task.Data.Configuration;using Ovi.Task.Data.Entity;namespace Ovi.Task.Data.Mapping{    public sealed class TMPLANNEDTOOLS_MAP : ClassMap<TMPLANNEDTOOLS>    {        public TMPLANNEDTOOLS_MAP()        {            Id(x => x.TPL_ID);            Map(x => x.TPL_TASK);            Map(x => x.TPL_ACTIVITY);            Map(x => x.TPL_ACTIVITYDESC).ReadOnly().Formula("(SELECT ta.TSA_DESC FROM TMTASKACTIVITIES ta WHERE ta.TSA_LINE = TPL_ACTIVITY AND ta.TSA_TASK = TPL_TASK)");            Map(x => x.TPL_PLANDATE);            Map(x => x.TPL_TOOL).Length(PropertySettings.L50);            Map(x => x.TPL_TOOLDESC).ReadOnly().Formula("(SELECT t.TOO_DESCRIPTION FROM TMTOOLS t WHERE t.TOO_CODE = TPL_TOOL)");            Map(x => x.TPL_PERIOD);            Map(x => x.TPL_CHARGINGPERIOD).ReadOnly().Formula("(SELECT t.TOO_CHARGINGPERIOD FROM TMTOOLS t WHERE t.TOO_CODE = TPL_TOOL)");            Map(x => x.TPL_UNITPRICE);            Map(x => x.TPL_CURR).Length(PropertySettings.L50);            Map(x => x.TPL_CURRDESC).ReadOnly().Formula("dbo.GetDesc('TMCURRENCIES','CUR_DESC', TPL_CURR, (SELECT c.CUR_DESC FROM TMCURRENCIES c WHERE c.CUR_CODE = TPL_CURR), :SessionContext.Language)");            Map(x => x.TPL_EXCH);            Map(x => x.TPL_TOTAL);            Map(x => x.TPL_CREATED);            Map(x => x.TPL_CREATEDBY).Length(PropertySettings.L50);            Map(x => x.TPL_UPDATED);            Map(x => x.TPL_UPDATEDBY).Length(PropertySettings.L50);            Map(x => x.TPL_RECORDVERSION).Default("0");        }    }}