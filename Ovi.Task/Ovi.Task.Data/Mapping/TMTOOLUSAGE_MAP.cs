using FluentNHibernate.Mapping;using Ovi.Task.Data.Configuration;using Ovi.Task.Data.Entity;namespace Ovi.Task.Data.Mapping{    public sealed class TMTOOLUSAGE_MAP : ClassMap<TMTOOLUSAGE>    {        public TMTOOLUSAGE_MAP()        {            Id(x => x.TOU_ID);            Map(x => x.TOU_TASK);            Map(x => x.TOU_ACTIVITY);            Map(x => x.TOU_ACTIVITYDESC).ReadOnly().Formula("(SELECT ta.TSA_DESC FROM TMTASKACTIVITIES ta WHERE ta.TSA_LINE = TOU_ACTIVITY AND ta.TSA_TASK = TOU_TASK)");            Map(x => x.TOU_DATE);            Map(x => x.TOU_TOOL).Length(PropertySettings.L50);            Map(x => x.TOU_TOOLDESC).ReadOnly().Formula("(SELECT t.TOO_DESCRIPTION FROM TMTOOLS t WHERE t.TOO_CODE = TOU_TOOL)");            Map(x => x.TOU_PERIOD);            Map(x => x.TOU_CHARGINGPERIOD).ReadOnly().Formula("(SELECT t.TOO_CHARGINGPERIOD FROM TMTOOLS t WHERE t.TOO_CODE = TOU_TOOL)");            Map(x => x.TOU_UNITPRICE);            Map(x => x.TOU_CURR).Length(PropertySettings.L50);            Map(x => x.TOU_CURRDESC).ReadOnly().Formula("dbo.GetDesc('TMCURRENCIES','CUR_DESC', TOU_CURR, (SELECT c.CUR_DESC FROM TMCURRENCIES c WHERE c.CUR_CODE = TOU_CURR), :SessionContext.Language)");            Map(x => x.TOU_EXCH);            Map(x => x.TOU_TOTAL);            Map(x => x.TOU_CREATED);            Map(x => x.TOU_CREATEDBY).Length(PropertySettings.L50);            Map(x => x.TOU_UPDATED);            Map(x => x.TOU_UPDATEDBY).Length(PropertySettings.L50);            Map(x => x.TOU_RECORDVERSION).Default("0");        }    }}