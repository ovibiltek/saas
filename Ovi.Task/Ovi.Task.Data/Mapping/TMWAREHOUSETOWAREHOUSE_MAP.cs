using FluentNHibernate.Mapping;using Ovi.Task.Data.Configuration;using Ovi.Task.Data.Entity;namespace Ovi.Task.Data.Mapping{    public sealed class TMWAREHOUSETOWAREHOUSE_MAP : ClassMap<TMWAREHOUSETOWAREHOUSE>    {        public TMWAREHOUSETOWAREHOUSE_MAP()        {          

            Id(x => x.WTW_ID);            Map(x => x.WTW_ORG).Length(PropertySettings.L50);            Map(x => x.WTW_ORGDESC).ReadOnly().Formula("dbo.GetDesc('TMORGS','ORG_DESC', WTW_ORG,(SELECT o.ORG_DESC FROM TMORGS o WHERE o.ORG_CODE = WTW_ORG),:SessionContext.Language)");            Map(x => x.WTW_FROM).Length(PropertySettings.L50);            Map(x => x.WTW_FROMDESC).ReadOnly().Formula("dbo.GetDesc('TMWAREHOUSES','WAH_DESC', WTW_FROM, (SELECT w.WAH_DESC FROM TMWAREHOUSES w WHERE w.WAH_CODE = WTW_FROM), :SessionContext.Language)");            Map(x => x.WTW_FROMBIN).Length(PropertySettings.L50);            Map(x => x.WTW_FROMBINDESC).ReadOnly().Formula("(SELECT b.BIN_DESC FROM TMBINS b WHERE b.BIN_CODE = WTW_FROMBIN AND b.BIN_WAREHOUSE = WTW_FROM)");            Map(x => x.WTW_TO).Length(PropertySettings.L50);            Map(x => x.WTW_TODESC).ReadOnly().Formula("dbo.GetDesc('TMWAREHOUSES','WAH_DESC', WTW_TO, (SELECT w.WAH_DESC FROM TMWAREHOUSES w WHERE w.WAH_CODE = WTW_TO), :SessionContext.Language)");            Map(x => x.WTW_TOBIN).Length(PropertySettings.L50);            Map(x => x.WTW_TOBINDESC).ReadOnly().Formula("(SELECT b.BIN_DESC FROM TMBINS b WHERE b.BIN_CODE = WTW_TOBIN AND b.BIN_WAREHOUSE = WTW_TO)");            Map(x => x.WTW_PART);            Map(x => x.WTW_PARTCODE).ReadOnly().Formula("(SELECT p.PAR_CODE FROM TMPARTS p WHERE p.PAR_ID = WTW_PART)");            Map(x => x.WTW_PARTDESC).ReadOnly().Formula("(SELECT p.PAR_DESC FROM TMPARTS p WHERE p.PAR_ID = WTW_PART)");            Map(x => x.WTW_QTY);            Map(x => x.WTW_UOM).Length(PropertySettings.L50);            Map(x => x.WTW_UOMDESC).ReadOnly().Formula("dbo.GetDesc('TMUOMS','UOM_DESC', WTW_UOM, (SELECT u.UOM_DESC FROM TMUOMS u WHERE u.UOM_CODE = WTW_UOM),:SessionContext.Language)");            Map(x => x.WTW_UNITPRICE);            Map(x => x.WTW_CURR);            Map(x => x.WTW_CURRDESC).Formula("dbo.GetDesc('TMCURRENCIES','CUR_DESC', WTW_CURR, (SELECT c.CUR_DESC FROM TMCURRENCIES c WHERE c.CUR_CODE = WTW_CURR), :SessionContext.Language)");            Map(x => x.WTW_CREATED);            Map(x => x.WTW_CREATEDBY).Length(PropertySettings.L50);            Map(x => x.WTW_UPDATED);            Map(x => x.WTW_UPDATEDBY).Length(PropertySettings.L50);            Map(x => x.WTW_RECORDVERSION).Default("0");        }    }}