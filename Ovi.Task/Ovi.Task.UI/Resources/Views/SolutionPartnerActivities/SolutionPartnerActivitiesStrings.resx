<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="active" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="addnew" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="anticipatedduration" xml:space="preserve">
    <value>Anticipated Duration</value>
  </data>
  <data name="branch" xml:space="preserve">
    <value>Branch</value>
  </data>
  <data name="browse" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="checklist" xml:space="preserve">
    <value>Checklist</value>
  </data>
  <data name="code" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="comments" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="completeactivity" xml:space="preserve">
    <value>Complete / Hold Activity</value>
  </data>
  <data name="completedactivities" xml:space="preserve">
    <value>Completed</value>
  </data>
  <data name="pricing" xml:space="preserve">
    <value>Pricing</value>
  </data>
  <data name="customer" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="doctype" xml:space="preserve">
    <value>Document Type</value>
  </data>
  <data name="documents" xml:space="preserve">
    <value>Documents</value>
  </data>
  <data name="equipmentcode" xml:space="preserve">
    <value>Equipment Code</value>
  </data>
  <data name="equipmenttype" xml:space="preserve">
    <value>Equipment Type</value>
  </data>
  <data name="functions" xml:space="preserve">
    <value>Functions</value>
  </data>
  <data name="history" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="holdreason" xml:space="preserve">
    <value>Hold Reason</value>
  </data>
  <data name="invoicedactivities" xml:space="preserve">
    <value>Invoiced</value>
  </data>
  <data name="maintenanceequipment" xml:space="preserve">
    <value>Maintenance Equipment</value>
  </data>
  <data name="notcompletedactivities" xml:space="preserve">
    <value>Not Completed</value>
  </data>
  <data name="ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="plannedstart" xml:space="preserve">
    <value>Planned Start</value>
  </data>
  <data name="pleaseselect" xml:space="preserve">
    <value>Please Select</value>
  </data>
  <data name="misccosts" xml:space="preserve">
    <value>Misc. Costs</value>
  </data>
  <data name="qty" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="qualifications" xml:space="preserve">
    <value>Qualifications</value>
  </data>
  <data name="quantity" xml:space="preserve">
    <value>Adet</value>
  </data>
  <data name="record" xml:space="preserve">
    <value>Record</value>
  </data>
  <data name="save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="servicecode" xml:space="preserve">
    <value>Service Code</value>
  </data>
  <data name="servicecodes" xml:space="preserve">
    <value>Service Codes</value>
  </data>
  <data name="shortdesc" xml:space="preserve">
    <value>Short Desc.</value>
  </data>
  <data name="solutionpartneractivities" xml:space="preserve">
    <value>Solution Partner Activities</value>
  </data>
  <data name="status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="taskid" xml:space="preserve">
    <value>Task Number</value>
  </data>
  <data name="translations" xml:space="preserve">
    <value>Translations</value>
  </data>
  <data name="undo" xml:space="preserve">
    <value>Undo</value>
  </data>
  <data name="unspecified" xml:space="preserve">
    <value>Unspecified</value>
  </data>
  <data name="upload" xml:space="preserve">
    <value>Upload</value>
  </data>
  <data name="withbarcode" xml:space="preserve">
    <value>With Barcode</value>
  </data>
  <data name="withoutbarcode" xml:space="preserve">
    <value>Without Barcode</value>
  </data>
  <data name="activity" xml:space="preserve">
    <value>Activity</value>
  </data>
  <data name="curr" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="exch" xml:space="preserve">
    <value>Exchange Rate</value>
  </data>
  <data name="invoice" xml:space="preserve">
    <value>Invoice</value>
  </data>
  <data name="part" xml:space="preserve">
    <value>Part</value>
  </data>
  <data name="service" xml:space="preserve">
    <value>Service</value>
  </data>
  <data name="total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="unitprice" xml:space="preserve">
    <value>Unit Price</value>
  </data>
  <data name="unitsalesprice" xml:space="preserve">
    <value>Unit Sales Price</value>
  </data>
  <data name="uom" xml:space="preserve">
    <value>Uom</value>
  </data>
  <data name="activitycompleted" xml:space="preserve">
    <value>Activity Completed</value>
  </data>
  <data name="closestate" xml:space="preserve">
    <value>Close State</value>
  </data>
  <data name="estimationcompleted" xml:space="preserve">
    <value>Estimation Completed</value>
  </data>
  <data name="note" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="branchdesc" xml:space="preserve">
    <value>Branch Desc.</value>
  </data>
  <data name="activityno" xml:space="preserve">
    <value>Activity No</value>
  </data>
  <data name="customalert" xml:space="preserve">
    <value>Dear solution partner; Please log in for the services you have provided in the “Labor” section. In special cases where there is no labor code, you can enter “Other Expenditure”. Although the labor code corresponding to your service exists, the amounts will not be approved and payment periods will be delayed when the entry is made in this section.</value>
  </data>
  <data name="completedandwaitingforapproval" xml:space="preserve">
    <value>Completed And Waiting For Approval</value>
  </data>
  <data name="completedandwaitingfordata" xml:space="preserve">
    <value>Completed And Waiting For Data Input</value>
  </data>
  <data name="readyforinvoice" xml:space="preserve">
    <value>Ready For Invoice</value>
  </data>
  <data name="bookedhours" xml:space="preserve">
    <value>Booked Hours</value>
  </data>
  <data name="createddate" xml:space="preserve">
    <value>Created Date</value>
  </data>
  <data name="eqpusage" xml:space="preserve">
    <value>Equipment Usage (Self)</value>
  </data>
  <data name="filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="invno" xml:space="preserve">
    <value>Invoice No</value>
  </data>
  <data name="lastquono" xml:space="preserve">
    <value>Last Quo. No</value>
  </data>
  <data name="othercosts" xml:space="preserve">
    <value>Other Costs</value>
  </data>
  <data name="sendforapproval" xml:space="preserve">
    <value>Send for Approval</value>
  </data>
  <data name="choseservicecode" xml:space="preserve">
    <value>Plese Select Service Code</value>
  </data>
  <data name="activitystatus" xml:space="preserve">
    <value>Activity Status</value>
  </data>
  <data name="workinfo" xml:space="preserve">
    <value>Activity Info</value>
  </data>
  <data name="customerinfo" xml:space="preserve">
    <value>Customer Info</value>
  </data>
  <data name="branchadress" xml:space="preserve">
    <value>Branch Adress</value>
  </data>
  <data name="addcomment" xml:space="preserve">
    <value>Add work comment</value>
  </data>
  <data name="equipment" xml:space="preserve">
    <value>Equipment</value>
  </data>
  <data name="openandplanned" xml:space="preserve">
    <value>Open / Planned</value>
  </data>
  <data name="openandwaiting" xml:space="preserve">
    <value>Open / Waiting</value>
  </data>
  <data name="filteringoptions" xml:space="preserve">
    <value>Filtering Options</value>
  </data>
  <data name="partisnotfound" xml:space="preserve">
    <value>Part is not found</value>
  </data>
  <data name="partreference" xml:space="preserve">
    <value>Part Reference</value>
  </data>
  <data name="complete" xml:space="preserve">
    <value>Complete</value>
  </data>
  <data name="hold" xml:space="preserve">
    <value>Hold</value>
  </data>
  <data name="state" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="statedetail" xml:space="preserve">
    <value>State Detail</value>
  </data>
  <data name="periodictask" xml:space="preserve">
    <value>Periodic Task</value>
  </data>
  <data name="issuereturn" xml:space="preserve">
    <value>Equipment Usage (Warehouse)</value>
  </data>
  <data name="addandnew" xml:space="preserve">
    <value>Save and Add New Line</value>
  </data>
  <data name="brand" xml:space="preserve">
    <value>Brand</value>
  </data>
  <data name="partnotfound" xml:space="preserve">
    <value>Part not found</value>
  </data>
  <data name="quolinepopup" xml:space="preserve">
    <value>Are you sure you want to submit an offer record? If you want to add a new line, add the lines by clicking and clicking the no button.</value>
  </data>
  <data name="quolinewarn" xml:space="preserve">
    <value>Please create the quote lines. After adding all lines, you can terminate the registration of the proposal with the Submit button.</value>
  </data>
  <data name="reference" xml:space="preserve">
    <value>Referance</value>
  </data>
  <data name="send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="servicecodenotfound" xml:space="preserve">
    <value>Service code not found</value>
  </data>
  <data name="unittotal" xml:space="preserve">
    <value>Unit Total Price</value>
  </data>
  <data name="download" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="detail" xml:space="preserve">
    <value>Detail</value>
  </data>
  <data name="contact" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="plandate" xml:space="preserve">
    <value>Plan Date</value>
  </data>
</root>