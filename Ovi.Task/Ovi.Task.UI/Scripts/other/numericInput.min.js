!function (u) { var l = { allowFloat: !1, allowNegative: !1, min: void 0, max: void 0 }; function c(t) { if (t.selectionStart) return t.selectionStart; if (document.selection) { t.focus(); var e = document.selection.createRange(); if (null == e) return 0; var i = t.createTextRange(), n = i.duplicate(); return i.moveToBookmark(e.getBookmark()), n.setEndPoint("EndToStart", i), n.text.length } return 0 } u.fn.numericInput = function (t) { var e = u.extend({}, l, t), n = e.allowFloat, a = e.allowNegative, r = e.min, o = e.max; if ((r || 0) == (o || 1)) throw "The minimum value cannot be the same as the max value"; if (o < r) { var i = r; r = o, o = i } return this.keypress(function (t) { var e = t.which, i = u(this).val(); if (0 < e && (e < 48 || 57 < e)) if (1 == n && 46 == e) { if (1 == a && 0 == c(this) && "-" == i.charAt(0)) return !1; if (i.match(/[.]/)) return !1 } else { if (1 != a || 45 != e) return 8 == e || 67 == e || 86 == e; if ("-" == i.charAt(0)) return !1; if (0 != c(this)) return !1 } else if (0 < e && 48 <= e && e <= 57 && 1 == a && "-" == i.charAt(0) && 0 == c(this)) return !1 }), u(this).bind("cut copy paste", function (t) { t.preventDefault() }), this.change(function (t) { var e = u(this).val(); if (0 < e.length) { var i = parseFloat(e); void 0 !== r && i < r && u(this).val(r), void 0 !== o && o < i && u(this).val(o) } }), this } }(jQuery);